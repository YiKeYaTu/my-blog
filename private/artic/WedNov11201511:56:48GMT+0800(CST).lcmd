<h3>JS确实是单线程</h3>
<p>最近看NODE的时候遇到了点问题,以前写前端的时候没怎么注意,写上博客装下逼. 根据各种资料显示,JS的确是单线程的,但是这里的单线程和我们所说的单线程可能不太一样. JS的单线程代表JS是没有并行执行代码的能力,确实浏览器端的JS并没有任何提供给我们任何开启另一线程的能力,及时是setTimeout这样的异步函数也只是延迟压入浏览器任务队列等待执行.这里我们要明白一点JS确实是单线程的. </p>
<h3>事件循环</h3>
<p>JS是依靠事件驱动,事件驱动的原理是将会在内部构建一个类似这样的循环.</p>
<pre><code>while (true) {
    if (events) {
        events.emit(res);
    }
}</code></pre>
<p>这个循环会不断检测当前是否有事件待处理,如果有则拿出来处理,如果没有的话就继续.因为JS是单线程的,所以单靠JS无法完成事件循环这个任务,这个时候怎么办呢?</p>
<h3>运行JS的平台提供额外线程</h3>
<p>JS是单线程的并不代表运行JS的容器也是单线程的,容器会为JS另外开启一个任务队列线程,这个线程将会辅助JS完成事件循环等等工作,但是这个线程对于开发者而言是不可见的.就像Node.js中fs模块的fs.readFile方法</p>
<pre><code>fs.readFile('data',function (err,data) {
    //do something..
})</code></pre>
<p>这个方法将会进行异步读取文件但是却不会阻碍JS线程,并在读取完之后将结果返回给JS线程,这也是底层另开线程来完成的.</p>
